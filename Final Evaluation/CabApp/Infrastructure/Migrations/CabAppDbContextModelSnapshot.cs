// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Yifan_Wu.CabApp.Infrastructure.Migrations
{
    [DbContext(typeof(CabAppDbContext))]
    partial class CabAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApplicationCore.Entities.Bookings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingTime")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("CabTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FromPlace")
                        .HasColumnType("int");

                    b.Property<string>("Landmark")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PickupAddress")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("PickupDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PickupTime")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Status")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ToPlace")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CabTypeId");

                    b.HasIndex("FromPlace");

                    b.HasIndex("ToPlace");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookingsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingTime")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("CabTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Charge")
                        .HasColumnType("Money");

                    b.Property<string>("Comp_time")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Feedback")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("FromPlace")
                        .HasColumnType("int");

                    b.Property<string>("Landmark")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PickupAddress")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("PickupDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PickupTime")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Status")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ToPlace")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CabTypeId");

                    b.HasIndex("FromPlace");

                    b.HasIndex("ToPlace");

                    b.ToTable("Bookings history");
                });

            modelBuilder.Entity("ApplicationCore.Entities.CabType", b =>
                {
                    b.Property<int>("CabTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CabTypeName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("CabTypeId");

                    b.ToTable("CabTypes");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Place", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlaceName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("PlaceId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Bookings", b =>
                {
                    b.HasOne("ApplicationCore.Entities.CabType", "CabType")
                        .WithMany("Bookings")
                        .HasForeignKey("CabTypeId");

                    b.HasOne("ApplicationCore.Entities.Place", "From")
                        .WithMany("BookingsFrom")
                        .HasForeignKey("FromPlace");

                    b.HasOne("ApplicationCore.Entities.Place", "To")
                        .WithMany("BookingsTo")
                        .HasForeignKey("ToPlace");

                    b.Navigation("CabType");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookingsHistory", b =>
                {
                    b.HasOne("ApplicationCore.Entities.CabType", "CabType")
                        .WithMany("BookingsHistories")
                        .HasForeignKey("CabTypeId");

                    b.HasOne("ApplicationCore.Entities.Place", "From")
                        .WithMany("BookingsHistoriesFrom")
                        .HasForeignKey("FromPlace");

                    b.HasOne("ApplicationCore.Entities.Place", "To")
                        .WithMany("BookingsHistoriesTo")
                        .HasForeignKey("ToPlace");

                    b.Navigation("CabType");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("ApplicationCore.Entities.CabType", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("BookingsHistories");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Place", b =>
                {
                    b.Navigation("BookingsFrom");

                    b.Navigation("BookingsHistoriesFrom");

                    b.Navigation("BookingsHistoriesTo");

                    b.Navigation("BookingsTo");
                });
#pragma warning restore 612, 618
        }
    }
}
